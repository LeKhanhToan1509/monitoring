
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vsic2018_app
    volumes:
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    
    restart: on-failure

    healthcheck:
      test: ["CMD", "./health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3

    env_file:                     
      - .env
    depends_on:
      - cache
    networks:
      - my-network

  cache:
    image: redis:6.2-alpine
    container_name: vsic2018_cache
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus-data:/prometheus
      - ./prometheus/prometheus.yml:/prometheus.yml
    command:
      - "--config.file=/prometheus.yml"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass@123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - my-network 


  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/app/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring
    networks:
      - my-network

networks:
  my-network:
  
volumes:
  cache:
